/*
 * ISConsole Copyright 2013 lilianglin . 
 * All rights reserved.
 * Package:com.rbt.action
 * FileName: {CLASSNAME}Action.java 
 */
package com.lll.webapp.action;

import java.util.*;
import com.lll.webapp.action.BaseAction;
import com.lll.model.{CLASSNAME};
import com.lll.service.I{CLASSNAME}Service;

import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.apache.struts2.convention.annotation.Action;
import org.apache.struts2.convention.annotation.Result;
import org.apache.struts2.convention.annotation.Results;
import com.lll.common.Constants;

/**
 * @function 功能 {FUNNAME}action类
 * @author 创建人 {AUTHOR}
 * @date 创建日期 {DATE}
 */
 
@Results( { 
	@Result(name = "index", location = "/WEB-INF/pages/admin/{TABLENAME}/index.ftl"),
	@Result(name = "view", location = "/WEB-INF/pages/admin/{TABLENAME}/update.ftl"),
	@Result(name = "add", location = "/WEB-INF/pages/admin/{TABLENAME}/insert.ftl")
})
 
@Controller
public class {CLASSNAME}Action extends BaseAction{
	
	private static final long serialVersionUID = 1L;
	
	/*
	 * {FUNNAME}业务层接口
	 */
	@Autowired
	private I{CLASSNAME}Service {TABLENAME}Service;
	
	/*
	 * {FUNNAME}对象
	 */
	public {CLASSNAME} {TABLENAME};
	{searchlist}
	public String [field_name]_search;
	{/searchlist}
	
	/**
	 * 方法描述：返回新增{FUNNAME}页面
	 * 
	 * @return
	 * @throws Exception
	 */
	@Action("/admin/{TABLENAME}/add")
	public String add() throws Exception {
		return "add";
	}
	
	/**
	 * 方法描述：新增{FUNNAME}
	 * 
	 * @return
	 * @throws Exception
	 */
	@Action("/admin/{TABLENAME}/insert")
	public String insert() throws Exception {
		if(checkFormField({TABLENAME},"save")){
			return Constants.ACTIONERROR;
		}
		{TABLENAME}Service.insert({TABLENAME});
		this.addActionMessage("{FUNNAME}新增成功");
		return list();
	}
	
	/**
	 * 方法描述：根据搜索条件列出信息列表
	 * @return
	 * @throws Exception
	 */
	@Action("/admin/{TABLENAME}/index")
	public String list() throws Exception {
		Map map = new HashMap();
		{searchlist}
		if(!StringUtils.isBlank([field_name]_search)){
			map.put("[field_name]", [field_name]_search);
		}
		{/searchlist}
		map = this.pageTool(map);
		this.pagevo = {TABLENAME}Service.getPageList(map);
		return "index";
	}
	
	/**
	 * 方法描述：根据主键找出{FUNNAME}信息
	 * 
	 * @return
	 * @throws Exception
	 */
	@Action("/admin/{TABLENAME}/view")
	public String view() throws Exception {
		if(checkFormField({TABLENAME},"view")){
			return Constants.ACTIONERROR;
		}
		String id = {TABLENAME}.get{TABLEKEYUPPER}();
		{TABLENAME} = {TABLENAME}Service.get(id);
		return "view";
	}
	
	/**
	 * 方法描述：修改{FUNNAME}信息
	 * 
	 * @return
	 * @throws Exception
	 */
	@Action("/admin/{TABLENAME}/update")
	public String update() throws Exception {
		if(checkFormField({TABLENAME},"save")){
			return Constants.ACTIONERROR;
		}
		{TABLENAME}Service.update({TABLENAME});
		this.addActionMessage("{FUNNAME}修改成功");
		return list();
	}
	
	/**
	 * 方法描述：删除{FUNNAME}信息
	 * @return
	 * @throws Exception
	 */
	@Action("/admin/{TABLENAME}/delete")
	public String delete() throws Exception {
		if(checkFormField({TABLENAME},"view")){
			return Constants.ACTIONERROR;
		}
		String id = {TABLENAME}.get{TABLEKEYUPPER}();
		{TABLENAME}Service.delete(id);
		this.addActionMessage("{FUNNAME}删除成功");
		return list();
	}
	
	/**
	 * @return the {TABLENAME}
	 */
	public {CLASSNAME} get{CLASSNAME}() {
		return {TABLENAME};
	}
	/**
	 * @param {CLASSNAME}
	 *            the {TABLENAME} to set
	 */
	public void set{CLASSNAME}({CLASSNAME} {TABLENAME}) {
		this.{TABLENAME} = {TABLENAME};
	}
	
	{searchlist}
	public String get[fieldname]_search() {
		return [field_name]_search;
	}
	
	public void set[fieldname]_search(String [field_name]_search) {
		this.[field_name]_search = [field_name]_search;
	}
	{/searchlist}

}
